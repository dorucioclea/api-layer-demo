#!/usr/bin/env bash
# This script can be used to generate an ".env" for local development with
# docker compose.
#
# Example:
# ./scripts/generate_env_vars.sh

function check_openssl {
    which openssl > /dev/null
}

function gen_random_string {
    openssl rand -hex 16 | tr -d "\n"
}

function final_warning {
    source .env

    echo "Add to your [/etc/hosts] or [C:\Windows\System32\Drivers\etc\hosts] file the following line:"
    echo ""
    echo "127.0.0.1  ${BASE_DOMAIN}"
    echo ""
}

function gen_env_file {
    cat << EOF
#
# USE THIS ONLY LOCALLY
#
# This file was generated by "./scripts/generate_env_vars.sh" script.
#
# Variables in this file will be substituted into docker-compose-ZZZ.yml and
# are intended to be used exclusively for local deployment.
# Never deploy these to publicly accessible servers.
#
# Verify correct substitution with:
#
#   docker-compose config
#   docker-compose -f docker-compose-connect.yml config
#   docker-compose -f docker-compose-generation.yml config
#   docker-compose -f docker-compose-test.yml config
#
# If variables are newly added or enabled,
# please restart the images to pull in changes:
#
#   docker-compose restart {container-name}
#

# ------------------------------------------------------------------
# Authorization & Authentication
# ==================================================================
PLATFORM_NAME=flora
KEYCLOAK_GLOBAL_ADMIN=admin
KEYCLOAK_GLOBAL_PASSWORD=password
KEYCLOAK_PG_PASSWORD=$(gen_random_string)
KONG_PG_PASSWORD=$(gen_random_string)
KEYCLOAK_INITIAL_USER_USERNAME=user
KEYCLOAK_INITIAL_USER_PASSWORD=password
KEYCLOAK_KONG_CLIENT=kong


# ------------------------------------------------------------------
# Routing
# ==================================================================
BASE_DOMAIN=floramedia.local
BASE_HOST=http://floramedia.local

KEYCLOAK_INTERNAL=http://keycloak:8080
KONG_INTERNAL=http://kong:8001
KONGA_INTERNAL=http://konga:1337

NETWORK_SUBNET=192.168.2.0/24
NETWORK_GATEWAY=192.168.2.1
KONG_IP=192.168.2.10

EOF
}

if [ -e ".env" ]; then
    echo "[.env] file already exists! Remove it if you want to generate a new one."
    final_warning
    exit 0
fi

check_openssl
RET=$?
if [ $RET -eq 1 ]; then
    echo "Please install 'openssl'"
    exit 1
fi

set -Eeo pipefail
gen_env_file > .env
echo "[.env] file generated!"
final_warning
