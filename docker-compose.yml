version: '2.1'

networks:
  internal:
    external:
      # if this isn't explicitly set it inherits from the containing folder name (floramedia or not)
      name: ${PLATFORM_NAME}-internal

volumes:
  database_data:
    external:
      name: ${PLATFORM_NAME}-database_data
  konga_data:
    external:
      name: ${PLATFORM_NAME}-konga_data

services:

  # ---------------------------------
  # Database
  # ---------------------------------

  db:
    image: postgres:9.6-alpine
    environment:
      PGUSER: postgres
    healthcheck:
      test: pg_isready
      interval: 2s
      timeout: 3s
      retries: 30
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - internal

  # ---------------------------------
  # Authorization modules
  # ---------------------------------

  kong:
    build: ./api-auth/kong
    environment:
      # KONG_DATABASE: postgres
      # KONG_PG_HOST: db
      # KONG_PG_DATABASE: kong
      # KONG_PG_USER: kong
      # KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      # KONG_PROXY_ACCESS_LOG: /dev/stdout
      # KONG_ADMIN_ACCESS_LOG: /dev/stdout
      # KONG_PROXY_ERROR_LOG: /dev/stderr
      # KONG_ADMIN_ERROR_LOG: /dev/stderr

      # KONG_ADMIN_LISTEN: 0.0.0.0:8001
      # KONG_ADMIN_LISTEN_SSL: 0.0.0.0:8444
      # KONG_PROXY_LISTEN: 0.0.0.0:6666
      
      # KONG_LOG_LEVEL: debug

      # KONG_PLUGINS: bundled,kong-oidc-auth
      # # allow large headers
      # KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS: "16 128k"
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}

      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:80
      KONG_LOG_LEVEL: debug

      KONG_PLUGINS: bundled,kong-oidc-auth
      # allow large headers
      KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS: "16 128k"

    depends_on:
      db:
        condition: service_healthy
    ports:
      - 80:80
      # - 8001:8001  # TODO Remove
      # - 8000:8000
      # - 8443:8443
      # - 8001:8001
      # - 8444:8444
      # - 6666:6666
    networks:
      - internal
    extra_hosts:
      - "floramedia.local:127.0.0.1"
    command: ["kong", "start"]

  konga-database:
    image: mongo:4.1.5
    container_name: konga-database
    volumes:
      - konga_data:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build: ./api-auth/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: ${KEYCLOAK_PG_PASSWORD}

      KEYCLOAK_USER: ${KEYCLOAK_GLOBAL_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_GLOBAL_PASSWORD}

      PROXY_ADDRESS_FORWARDING: 'true'
      PROXY_PORT_FORWARDING: 'true'
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - internal
  konga:
    build: ./konga
    container_name: konga
    depends_on:
      konga-database:
        condition: service_healthy
    volumes:
      - ./management/konga/user_seed.js:/app/user_seed.js:ro
    ports:
      - 1337:1337
    environment:
      DB_ADAPTER: mongo
      DB_DATABASE: konga
      DB_HOST: konga-database
      KONGA_SEED_USER_DATA_SOURCE_FILE: /app/user_seed.js
      NODE_ENV: production
    restart: on-failure

  # ---------------------------------
  # Auth builder Container
  # ---------------------------------

  auth:
    build: ./management/gateway
    environment:
      KEYCLOAK_GLOBAL_ADMIN: ${KEYCLOAK_GLOBAL_ADMIN}
      KEYCLOAK_GLOBAL_PASSWORD: ${KEYCLOAK_GLOBAL_PASSWORD}
      KEYCLOAK_KONG_CLIENT: ${KEYCLOAK_KONG_CLIENT}
      BASE_DOMAIN: ${BASE_DOMAIN}
      BASE_HOST: ${BASE_HOST}
      PLATFORM_NAME: ${PLATFORM_NAME}
      KEYCLOAK_INTERNAL: ${KEYCLOAK_INTERNAL}
      KONG_INTERNAL: ${KONG_INTERNAL}
      MINIO_INTERNAL: ${MINIO_INTERNAL-http://minio.local}
    volumes:
      - ./api-auth/service:/code/service
      - ./api-auth/solution:/code/solution
    command: help
    networks:
      - internal

  demo-service:
    image: demo-service
    build: ./simple-demo-service
    environment:

      APP_NAME: demo-service
      APP_PORT: 3013

      APP_INTERNAL: http://demo-service:3013
      BASE_HOST: ${BASE_HOST}
      KEYCLOAK_INTERNAL: ${KEYCLOAK_INTERNAL}
      KONG_INTERNAL: ${KONG_INTERNAL}
    volumes:
      - ./simple-demo-service:/code
    ports:
      - 3013:3013
    command: start
    networks:
      - internal
